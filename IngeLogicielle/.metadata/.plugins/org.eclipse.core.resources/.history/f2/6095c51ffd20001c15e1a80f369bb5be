package main.dico;


public abstract class AbstractDictionary implements IDictionary{
	
	Object[] keys; 
	Object[] values;
	
	public IDictionary put(Object key, Object value) {
		int i = this.indexOf(key);
		System.out.println(i);
		if (i != -1) {
			values[i] = value;
		}else {
			// ??? 
			
	//		values[this.newIndexOf(key)] = value;
			
			System.out.println("val : " + keys[keys.length]);
			System.out.println("val : " + values[values.length]);
			System.out.println("size " + keys.length);
			System.out.println("size " + values.length);
			
		}
		return this;
	}
	
	public Object get(Object key) throws Exception {
		int i = this.indexOf(key);
		if (i != -1) {
			return values[i];
		}else {
			throw new Exception("Cette clÃ© n'est pas dans le dico: " + key);
		}
	}

	public boolean isEmpty() {
		return keys.length == 0;
	}
	
	public boolean containsKey(Object key) {
		return indexOf(key) > 0;
	}

	public int size() {
		return keys.length;
	}
	
	abstract int indexOf(Object key) ;
	abstract int newIndexOf(Object key) ;
}
